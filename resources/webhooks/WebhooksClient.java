/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.webhooks;

import core.ApiError;
import core.ClientOptions;
import core.ObjectMappers;
import core.RequestOptions;
import java.io.IOException;
import java.lang.Exception;
import java.lang.Object;
import java.lang.RuntimeException;
import java.lang.String;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.MediaType;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import resources.webhooks.requests.V2CreateWebhooksSchema;
import resources.webhooks.requests.V2UpdateWebhooksSchema;
import types.V2WebhookEnvelope;
import types.V2WebhookListEnvelope;

public class WebhooksClient {
  protected final ClientOptions clientOptions;

  public WebhooksClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookListEnvelope apiV2ListWebhooks(RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/webhooks")
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("GET", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2WebhookListEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookListEnvelope apiV2ListWebhooks() {
    return apiV2ListWebhooks(null);
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2CreateWebhook(V2CreateWebhooksSchema request,
      RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/webhooks")
      .build();
    RequestBody body;
    try {
      body = RequestBody.create(ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaType.parse("application/json"));
    }
    catch(Exception e) {
      throw new RuntimeException(e);
    }
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("POST", body)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2WebhookEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2CreateWebhook(V2CreateWebhooksSchema request) {
    return apiV2CreateWebhook(request,null);
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2GetWebhook(String id, RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/webhooks")
      .addPathSegment(id)
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("GET", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2WebhookEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2GetWebhook(String id) {
    return apiV2GetWebhook(id,null);
  }

  public void apiV2DeleteWebhook(String id, RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/webhooks")
      .addPathSegment(id)
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("DELETE", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return;
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  public void apiV2DeleteWebhook(String id) {
    apiV2DeleteWebhook(id,null);
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2UpdateWebhook(String id, V2UpdateWebhooksSchema request,
      RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/webhooks")
      .addPathSegment(id)
      .build();
    RequestBody body;
    try {
      body = RequestBody.create(ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaType.parse("application/json"));
    }
    catch(Exception e) {
      throw new RuntimeException(e);
    }
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("PATCH", body)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2WebhookEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * Webooks can be set up using the webhook API endpoints. Currently, only one
   * webhook may be created per organization. The webhook will be called for events
   * in that organization.
   * <p>Consult the <a href="https://docs.polytomic.com/reference/events">Events documentation</a> for more information.</p>
   */
  public V2WebhookEnvelope apiV2UpdateWebhook(String id, V2UpdateWebhooksSchema request) {
    return apiV2UpdateWebhook(id,request,null);
  }
}
