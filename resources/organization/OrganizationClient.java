/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.organization;

import core.ApiError;
import core.ClientOptions;
import core.ObjectMappers;
import core.RequestOptions;
import java.io.IOException;
import java.lang.Exception;
import java.lang.Object;
import java.lang.RuntimeException;
import java.lang.String;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.MediaType;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import resources.organization.requests.V2CreateOrganizationRequestSchema;
import resources.organization.requests.V2UpdateOrganizationRequestSchema;
import types.V2OrganizationEnvelope;
import types.V2OrganizationsEnvelope;

public class OrganizationClient {
  protected final ClientOptions clientOptions;

  public OrganizationClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationsEnvelope apiV2GetOrganizations(RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/organizations")
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("GET", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2OrganizationsEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationsEnvelope apiV2GetOrganizations() {
    return apiV2GetOrganizations(null);
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2CreateOrganization(V2CreateOrganizationRequestSchema request,
      RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/organizations")
      .build();
    RequestBody body;
    try {
      body = RequestBody.create(ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaType.parse("application/json"));
    }
    catch(Exception e) {
      throw new RuntimeException(e);
    }
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("POST", body)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2OrganizationEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2CreateOrganization(V2CreateOrganizationRequestSchema request) {
    return apiV2CreateOrganization(request,null);
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2GetOrganization(String id, RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/organizations")
      .addPathSegment(id)
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("GET", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2OrganizationEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2GetOrganization(String id) {
    return apiV2GetOrganization(id,null);
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public void apiV2RemoveOrganization(String id, RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/organizations")
      .addPathSegment(id)
      .build();
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("DELETE", null)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return;
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public void apiV2RemoveOrganization(String id) {
    apiV2RemoveOrganization(id,null);
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2UpdateOrganization(String id,
      V2UpdateOrganizationRequestSchema request, RequestOptions requestOptions) {
    HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder()

      .addPathSegments("api/organizations")
      .addPathSegment(id)
      .build();
    RequestBody body;
    try {
      body = RequestBody.create(ObjectMappers.JSON_MAPPER.writeValueAsBytes(request), MediaType.parse("application/json"));
    }
    catch(Exception e) {
      throw new RuntimeException(e);
    }
    Request okhttpRequest = new Request.Builder()
      .url(httpUrl)
      .method("PATCH", body)
      .headers(Headers.of(clientOptions.headers(requestOptions)))
      .addHeader("Content-Type", "application/json")
      .build();
    try {
      Response response = clientOptions.httpClient().newCall(okhttpRequest).execute();
      if (response.isSuccessful()) {
        return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), V2OrganizationEnvelope.class);
      }
      throw new ApiError(response.code(), ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
    }
    catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

  /**
   * <blockquote>
   * ðŸš§ Requires partner key
   * <p>Organization endpoints are only accessible using <a href="https://docs.polytomic.com/reference/authentication#partner-keys">partner keys</a></p>
   * </blockquote>
   */
  public V2OrganizationEnvelope apiV2UpdateOrganization(String id,
      V2UpdateOrganizationRequestSchema request) {
    return apiV2UpdateOrganization(id,request,null);
  }
}
