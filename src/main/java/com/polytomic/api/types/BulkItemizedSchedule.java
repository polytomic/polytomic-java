/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.polytomic.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.polytomic.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = BulkItemizedSchedule.Builder.class)
public final class BulkItemizedSchedule {
    private final String item;

    private final BulkSchedule schedule;

    private final Map<String, Object> additionalProperties;

    private BulkItemizedSchedule(String item, BulkSchedule schedule, Map<String, Object> additionalProperties) {
        this.item = item;
        this.schedule = schedule;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("item")
    public String getItem() {
        return item;
    }

    @JsonProperty("schedule")
    public BulkSchedule getSchedule() {
        return schedule;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkItemizedSchedule && equalTo((BulkItemizedSchedule) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkItemizedSchedule other) {
        return item.equals(other.item) && schedule.equals(other.schedule);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.item, this.schedule);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ItemStage builder() {
        return new Builder();
    }

    public interface ItemStage {
        ScheduleStage item(String item);

        Builder from(BulkItemizedSchedule other);
    }

    public interface ScheduleStage {
        _FinalStage schedule(BulkSchedule schedule);
    }

    public interface _FinalStage {
        BulkItemizedSchedule build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ItemStage, ScheduleStage, _FinalStage {
        private String item;

        private BulkSchedule schedule;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkItemizedSchedule other) {
            item(other.getItem());
            schedule(other.getSchedule());
            return this;
        }

        @java.lang.Override
        @JsonSetter("item")
        public ScheduleStage item(String item) {
            this.item = item;
            return this;
        }

        @java.lang.Override
        @JsonSetter("schedule")
        public _FinalStage schedule(BulkSchedule schedule) {
            this.schedule = schedule;
            return this;
        }

        @java.lang.Override
        public BulkItemizedSchedule build() {
            return new BulkItemizedSchedule(item, schedule, additionalProperties);
        }
    }
}
