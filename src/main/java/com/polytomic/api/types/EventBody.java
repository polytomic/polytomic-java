/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.polytomic.api.types;

import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.polytomic.api.core.ObjectMappers;
import java.io.IOException;
import java.util.Objects;

@JsonDeserialize(using = EventBody.Deserializer.class)
public final class EventBody {
    private final Object value;

    private final int type;

    private EventBody(Object value, int type) {
        this.value = value;
        this.type = type;
    }

    @JsonValue
    public Object get() {
        return this.value;
    }

    public <T> T visit(Visitor<T> visitor) {
        if (this.type == 0) {
            return visitor.visit((SyncRunningEvent) this.value);
        } else if (this.type == 1) {
            return visitor.visit((SyncCompletedEvent) this.value);
        } else if (this.type == 2) {
            return visitor.visit((SyncFailedEvent) this.value);
        } else if (this.type == 3) {
            return visitor.visit((SyncCanceledEvent) this.value);
        } else if (this.type == 4) {
            return visitor.visit((SyncCompletedWithErrorsEvent) this.value);
        } else if (this.type == 5) {
            return visitor.visit((BulkSyncRunningEvent) this.value);
        } else if (this.type == 6) {
            return visitor.visit((BulkSyncCompletedEvent) this.value);
        } else if (this.type == 7) {
            return visitor.visit((BulkSyncCanceledEvent) this.value);
        } else if (this.type == 8) {
            return visitor.visit((BulkSyncCompletedWithErrorEvent) this.value);
        } else if (this.type == 9) {
            return visitor.visit((BulkSyncFailedEvent) this.value);
        }
        throw new IllegalStateException("Failed to visit value. This should never happen.");
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EventBody && equalTo((EventBody) other);
    }

    private boolean equalTo(EventBody other) {
        return value.equals(other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.value);
    }

    @java.lang.Override
    public String toString() {
        return this.value.toString();
    }

    public static EventBody of(SyncRunningEvent value) {
        return new EventBody(value, 0);
    }

    public static EventBody of(SyncCompletedEvent value) {
        return new EventBody(value, 1);
    }

    public static EventBody of(SyncFailedEvent value) {
        return new EventBody(value, 2);
    }

    public static EventBody of(SyncCanceledEvent value) {
        return new EventBody(value, 3);
    }

    public static EventBody of(SyncCompletedWithErrorsEvent value) {
        return new EventBody(value, 4);
    }

    public static EventBody of(BulkSyncRunningEvent value) {
        return new EventBody(value, 5);
    }

    public static EventBody of(BulkSyncCompletedEvent value) {
        return new EventBody(value, 6);
    }

    public static EventBody of(BulkSyncCanceledEvent value) {
        return new EventBody(value, 7);
    }

    public static EventBody of(BulkSyncCompletedWithErrorEvent value) {
        return new EventBody(value, 8);
    }

    public static EventBody of(BulkSyncFailedEvent value) {
        return new EventBody(value, 9);
    }

    public interface Visitor<T> {
        T visit(SyncRunningEvent value);

        T visit(SyncCompletedEvent value);

        T visit(SyncFailedEvent value);

        T visit(SyncCanceledEvent value);

        T visit(SyncCompletedWithErrorsEvent value);

        T visit(BulkSyncRunningEvent value);

        T visit(BulkSyncCompletedEvent value);

        T visit(BulkSyncCanceledEvent value);

        T visit(BulkSyncCompletedWithErrorEvent value);

        T visit(BulkSyncFailedEvent value);
    }

    static final class Deserializer extends StdDeserializer<EventBody> {
        Deserializer() {
            super(EventBody.class);
        }

        @java.lang.Override
        public EventBody deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
            Object value = p.readValueAs(Object.class);
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, SyncRunningEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, SyncCompletedEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, SyncFailedEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, SyncCanceledEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, SyncCompletedWithErrorsEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, BulkSyncRunningEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, BulkSyncCompletedEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, BulkSyncCanceledEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, BulkSyncCompletedWithErrorEvent.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, BulkSyncFailedEvent.class));
            } catch (IllegalArgumentException e) {
            }
            throw new JsonParseException(p, "Failed to deserialize");
        }
    }
}
