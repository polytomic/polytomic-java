/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.polytomic.api.resources.models.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.polytomic.api.core.ObjectMappers;
import com.polytomic.api.types.CreateModelRequest;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ModelsPreviewRequest.Builder.class)
public final class ModelsPreviewRequest {
    private final Optional<Boolean> async;

    private final CreateModelRequest body;

    private final Map<String, Object> additionalProperties;

    private ModelsPreviewRequest(
            Optional<Boolean> async, CreateModelRequest body, Map<String, Object> additionalProperties) {
        this.async = async;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("async")
    public Optional<Boolean> getAsync() {
        return async;
    }

    @JsonProperty("body")
    public CreateModelRequest getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ModelsPreviewRequest && equalTo((ModelsPreviewRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ModelsPreviewRequest other) {
        return async.equals(other.async) && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.async, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BodyStage builder() {
        return new Builder();
    }

    public interface BodyStage {
        _FinalStage body(CreateModelRequest body);

        Builder from(ModelsPreviewRequest other);
    }

    public interface _FinalStage {
        ModelsPreviewRequest build();

        _FinalStage async(Optional<Boolean> async);

        _FinalStage async(Boolean async);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BodyStage, _FinalStage {
        private CreateModelRequest body;

        private Optional<Boolean> async = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ModelsPreviewRequest other) {
            async(other.getAsync());
            body(other.getBody());
            return this;
        }

        @java.lang.Override
        @JsonSetter("body")
        public _FinalStage body(CreateModelRequest body) {
            this.body = body;
            return this;
        }

        @java.lang.Override
        public _FinalStage async(Boolean async) {
            this.async = Optional.of(async);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "async", nulls = Nulls.SKIP)
        public _FinalStage async(Optional<Boolean> async) {
            this.async = async;
            return this;
        }

        @java.lang.Override
        public ModelsPreviewRequest build() {
            return new ModelsPreviewRequest(async, body, additionalProperties);
        }
    }
}
